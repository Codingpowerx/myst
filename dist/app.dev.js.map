{"version":3,"sources":["app.js"],"names":["path","require","express","morgan","rateLimit","helmet","mongoSanitize","xss","hpp","AppError","globalErrorHandler","tourRouter","userRouter","reviewRouter","app","set","join","__dirname","use","process","env","NODE_ENV","limiter","max","windowMs","message","json","limit","whitelist","req","res","next","requestTime","Date","toISOString","get","status","render","tour","user","all","originalUrl","module","exports"],"mappings":"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","sourcesContent":["const path = require('path');\r\nconst express = require('express');\r\nconst morgan = require('morgan');\r\nconst rateLimit = require('express-rate-limit');\r\nconst helmet = require('helmet');\r\nconst mongoSanitize = require('express-mongo-sanitize');\r\nconst xss = require('xss-clean');\r\nconst hpp = require('hpp');\r\n\r\nconst AppError = require('./utils/appError');\r\nconst globalErrorHandler = require('./controllers/errorController');\r\nconst tourRouter = require('./routes/tourRoutes');\r\nconst userRouter = require('./routes/userRoutes');\r\nconst reviewRouter = require('./routes/reviewRoutes');\r\n\r\nconst app = express();\r\n\r\napp.set('view engine', 'pug');\r\napp.set('views', path.join(__dirname, 'views'));\r\n\r\n// 1) GLOBAL MIDDLEWARES\r\n\r\n// Serving static files\r\n//app.use(express.static(`${__dirname}/public`));\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\n// Set security HTTP headers\r\napp.use(helmet());\r\n\r\n// Development logging\r\nif (process.env.NODE_ENV === 'development') {\r\n  app.use(morgan('dev'));\r\n}\r\n\r\n// Limit requests from same API\r\nconst limiter = rateLimit({\r\n  max: 100,\r\n  windowMs: 60 * 60 * 1000,\r\n  message: 'Too many requests from this IP, please try again in an hour!'\r\n});\r\napp.use('/api', limiter);\r\n\r\n// Body parser, reading data from body into req.body\r\napp.use(express.json({ limit: '10kb' }));\r\n\r\n// Data sanitization against NoSQL query injection\r\napp.use(mongoSanitize());\r\n\r\n// Data sanitization against XSS\r\napp.use(xss());\r\n\r\n// Prevent parameter pollution\r\napp.use(\r\n  hpp({\r\n    whitelist: [\r\n      'duration',\r\n      'ratingsQuantity',\r\n      'ratingsAverage',\r\n      'maxGroupSize',\r\n      'difficulty',\r\n      'price'\r\n    ]\r\n  })\r\n);\r\n\r\n// Test middleware\r\napp.use((req, res, next) => {\r\n  req.requestTime = new Date().toISOString();\r\n  // console.log(req.headers);\r\n  next();\r\n});\r\n\r\n// 3) ROUTES\r\napp.get('/', (req, res) => {\r\n  res.status(200).render('base', {\r\n    tour: 'The Forest Hiker',\r\n    user: 'Godspower'\r\n  });\r\n});\r\n\r\napp.use('/api/v1/tours', tourRouter);\r\napp.use('/api/v1/users', userRouter);\r\napp.use('/api/v1/reviews', reviewRouter);\r\n\r\napp.all('*', (req, res, next) => {\r\n  next(new AppError(`Can't find ${req.originalUrl} on this server!`, 404));\r\n});\r\n\r\napp.use(globalErrorHandler);\r\n\r\nmodule.exports = app;\r\n"],"file":"app.dev.js"}